<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Rmarkdown | Sahir Rai Bhatnagar]]></title>
  <link href="http://www.sahirbhatnagar.com/blog/categories/rmarkdown/atom.xml" rel="self"/>
  <link href="http://www.sahirbhatnagar.com/"/>
  <updated>2014-09-04T15:16:39-04:00</updated>
  <id>http://www.sahirbhatnagar.com/</id>
  <author>
    <name><![CDATA[Sahir Rai Bhatnagar]]></name>
    <email><![CDATA[sahir.bhatnagar@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Testing Rmd]]></title>
    <link href="http://www.sahirbhatnagar.com/blog/2014/09/04/testing-rmd/"/>
    <updated>2014-09-04T14:37:00-04:00</updated>
    <id>http://www.sahirbhatnagar.com/blog/2014/09/04/testing-rmd</id>
    <content type="html"><![CDATA[<pre><code>## Error: Invalid name specified, see ?BibOptions</code></pre>
<p>It has been quiet the last months here - main reason is that I’m working on my master’s thesis. I have already prepared some more examples from ‘Quantitative Ecotoxicolgy’, but I didn’t come to publish them here.</p>
<p>This post is about collinearity and the implications for linear models. The best way to explore this is by simulations - where I create data with known properties and look what happens.</p>
<h3 id="create-correlated-random-variables">Create correlated random variables</h3>
<p>The first problem for this simulation was: How can we create correlated random variables?</p>
<p>This simulation is similar to the one in, where it is also mentioned that one could use Cholesky Decompostion to create correlated variables:</p>
<p>What this function function does:</p>
<ul>
<li>Create two normal random variables (X1, X2 ~ N(0, 1))</li>
<li>Create desired correlation matrix</li>
<li>Compute the Choleski factorization of the correlation matrix ( R )</li>
<li>Apply the resulting matrix on the two variables (this rotates, shears and scales the variables so that they are correlated)</li>
<li>Create a dependent variable <code>y</code> after the model:</li>
</ul>
<p><code>y ~ 5 + 7*X1 + 7*X2 + e</code> with <code>e ~ N(0, 1)</code></p>
<pre class="sourceCode r"><code class="sourceCode r">#############################################################################
<span class="co"># create two correlated variables and a dependent variable</span>
<span class="co"># n : number of points</span>
<span class="co"># p:correlation</span>

datagen &lt;-<span class="st"> </span>function(n , p){
  <span class="co"># random points N(0,1)</span>
  x1 &lt;-<span class="st"> </span><span class="kw">rnorm</span>(n)
  x2 &lt;-<span class="st"> </span><span class="kw">rnorm</span>(n)
  X &lt;-<span class="st"> </span><span class="kw">cbind</span>(x1, x2)
  
  <span class="co"># desired correlation matrix</span>
  R &lt;-<span class="st"> </span><span class="kw">matrix</span>(<span class="kw">c</span>(<span class="dv">1</span>, p, p, <span class="dv">1</span>), <span class="dt">ncol =</span> <span class="dv">2</span>)
  
  <span class="co"># use cholesky decomposition `t(U) %*% U = R`</span>
  U &lt;-<span class="st"> </span><span class="kw">chol</span>(R)
  corvars &lt;-<span class="st"> </span>X %*%<span class="st"> </span>U
  
  <span class="co"># create dependent variable after model:</span>
  <span class="co"># y ~ 5 + 7 * X1 + 7 * X2 + e | E ~ N(0,10)</span>
  y &lt;-<span class="st"> </span><span class="dv">5</span> +<span class="st"> </span><span class="dv">7</span>*corvars[,<span class="dv">1</span>] +<span class="st"> </span><span class="dv">7</span>*corvars[,<span class="dv">2</span>] +<span class="st"> </span><span class="kw">rnorm</span>(n, <span class="dv">0</span>, <span class="dv">1</span>)
  df &lt;-<span class="st"> </span><span class="kw">data.frame</span>(y, corvars)
  <span class="kw">return</span>(df)
}</code></pre>
<p>Let’s see if it works. This creates two variables with 1000 observations with a correlation of 0.8 between them and a dependent variable.</p>
<pre class="sourceCode r"><code class="sourceCode r">df1 &lt;-<span class="st"> </span><span class="kw">datagen</span>(<span class="dt">n =</span> <span class="dv">1000</span>, <span class="dt">p =</span> <span class="fl">0.8</span>)</code></pre>
<p>The correlation between X1 and X2 is as desired nearly 0.8</p>
<pre class="sourceCode r"><code class="sourceCode r"><span class="kw">cor</span>(df1)</code></pre>
<pre><code>##          y      X1      X2
## y  1.00000 0.94217 0.94520
## X1 0.94217 1.00000 0.79119
## X2 0.94520 0.79119 1.00000</code></pre>
<p>And the data follows the specified model.</p>
<pre class="sourceCode r"><code class="sourceCode r">mod &lt;-<span class="st"> </span><span class="kw">lm</span>(y~X1+X2, <span class="dt">data =</span> df1)
<span class="kw">summary</span>(mod)</code></pre>
<pre><code>## 
## Call:
## lm(formula = y ~ X1 + X2, data = df1)
## 
## Residuals:
##    Min     1Q Median     3Q    Max 
## -2.902 -0.658 -0.042  0.671  3.528 
## 
## Coefficients:
##             Estimate Std. Error t value Pr(&gt;|t|)    
## (Intercept)   5.0067     0.0311     161   &lt;2e-16 ***
## X1            6.9655     0.0521     134   &lt;2e-16 ***
## X2            7.0918     0.0516     138   &lt;2e-16 ***
## ---
## Signif. codes:  0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1
## 
## Residual standard error: 0.982 on 997 degrees of freedom
## Multiple R-squared:  0.994,  Adjusted R-squared:  0.994 
## F-statistic: 8.81e+04 on 2 and 997 DF,  p-value: &lt;2e-16</code></pre>
<pre class="sourceCode r"><code class="sourceCode r"><span class="kw">pairs</span>(df1)</code></pre>
<figure>
<img src="../figure/2014-09-04-testing-rmd-example_datagen3.png" alt="plot of chunk example_datagen3" /><figcaption>plot of chunk example_datagen3</figcaption>
</figure>]]></content>
  </entry>
  
</feed>
